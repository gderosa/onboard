<%
  require 'pp'

  require 'onboard/network/interface'

  all_interfaces = OnBoard::Network::Interface.getAll.sort_by(
      &OnBoard::Network::Interface::PREFERRED_ORDER
  )

  iptablesobj       = objects

  ip_version        = iptablesobj.ip_version
%>
<style type="text/css">
  td {
    text-align: center;
  }
</style>
<h2>Linux Firewall (IPv<%= ip_version %>)</h2>

  <%=
    erubis(
      :"/_messages.html",
      {
        :layout => false,
        :locals => {
          :msg => msg,
          :status => status
        }
      }
    )
  %>

<% iptablesobj.tables['filter'].chains.each_pair do |chainname, chain| %>
  <h4>Chain <%= chain.name %></h4>
  <table>
    <thead>
      <tr>
        <% chain.listfields[0..0].each do |fieldname| %>
          <th colspan="4"><%= fieldname  %></th>
        <% end %>
        <% chain.listfields[1..-1].each do |fieldname| %>
          <th><%= fieldname  %></th>
        <% end %>
      </tr>
    </thead>
    <tbody>
      <% chain.rules.each_with_index do |rule, rule_idx| %>
        <tr>
          <form method="POST">
            <input type="hidden" name="_method" value="put"/>
            <input type="hidden" name="chain" value="<%= chain.name %>"/>
            <input type="hidden" name="rulenum" value="<%= rule[0] %>"/>
            <%
            # rule is an Array of fields, the first (rule[0]) represents
            # rulenum according to iptables conventions (starts from 1)
            #
            # Other "fields" come directly from iptables -L -v -n
            #
            # chain.rules is the Array of such arrays
            #
            # It is: rule_idx = rule[0] - 1
            %>
            <input type="hidden" name="rulespec" value="<%== chain.rulespecs[rule_idx] %>"/>
            <%
            # we cannot use rulenum to move up/down a rule; we have to delete
            # it, then recreate in a different position, so we need the full
            # rule specification
            %>
            <td>
              <strong class="highlight"><%= rule[0] %></strong> <!-- rule number -->
            </td>
            <td>
              <button type="submit" name="del_rule" title="Remove"><img src="<%= icondir + '/16x16/actions/remove.png'%>" alt="Remove" title="Remove"/></button>
            </td>
            <%
              # First[last] rule cannot be moved up[down] :
              # disable buttons accordingly
            %>
            <td>
              <button <%= 'disabled' if rule[0] == 1 %> type="submit" name="move_rule_up" title="Move up"><img src="<%= icondir + '/16x16/actions/go-up.png'%>" alt="Move up" title="Move up"></button>
            </td>
            <td>
              <button <%= 'disabled' if rule[0] == chain.rules.length %> type="submit" name="move_rule_down" title="Move down"><img src="<%= icondir + '/16x16/actions/go-down.png'%>" alt="Move down" title="Move down"/></button>
            </td>
            <% rule[1..-2].each do |value| %>
              <td><%= value %></td>
            <% end %>
            <!-- "misc" -->
            <%
              title = ""
              if rule[3] =~ /LOG/
                title << 'Some reasonable defaults have been added to avoid LOG flooding'
              end
            %>
            <td title="<%= title %>" style="text-align: left;"><kbd><%= rule[-1] %></kbd></td>
          </form>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>
<h3>Add a new rule</h3>
<form method="POST">
  <input type="hidden" name="_method" value="put"/>

  <%
    all_interfaces.each do |netif|
      if netif.bridged_to
        %>
          <input type="hidden" name="bridge_ports[]" value="<%= netif.name %>"/>
        <%
      end
    end
  %>

  <table>
    <thead>
      <tr>
        <th>
          Add!
        </th>
        <th>
          Append/Insert
        </th>
        <th>
          Chain<!-- (INPUT, OUTPUT, FORWARD) -->
        </th>
        <th>
          Action
        </th>
        <th>
          Comment
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style="text-align:center;">
          <button title="Add rule" type="submit" name="add_rule"><img src="<%= icondir + '/16x16/actions/add.png'%>" alt="add"/></button>
        </td>
        <td>
          <select name="append_insert">
            <option value="-A">Append</option>
            <option value="-I">Insert</option>
          </select>
        </td>
        <td>
          <select name="chain">
            <option value="INPUT">INPUT</option>
            <option value="OUTPUT">OUTPUT</option>
            <option value="FORWARD">FORWARD</option>
          </select>
        </td>
        <td>
          <select name="jump-target">
            <option value="ACCEPT">ACCEPT</option>
            <option value="REJECT">REJECT</option>
            <option value="DROP">DROP</option>
            <option value="LOG">LOG</option>
          </select>
        </td>
        <td>
          <input type="text" name="comment" class="humantext"/>
        </td>
      </tr>
    </tbody>
  </table>
  <table>
    <thead>
      <tr>
        <th>
          Protocol
        </th>
        <th>
          Input interface
        </th>
        <th>
          Output interface
        </th>
        <th>
          Source Address/Network
        </th>
        <th>
          Source Port/Interval
        </th>
        <th>
          Destination Address/Network
        </th>
        <th>
          Destination Port/Interval
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          <select name="proto">
            <option value=""></option>
            <option value="tcp">TCP</option>
            <option value="udp">UDP</option>
            <% if params['version'] =~ /6/ %>
              <option value="ipv6-icmp">ICMP</option>
            <% else %>
              <option value="icmp">ICMP</option>
            <% end %>
          </select>
        </td>
        <td>
          <%=
            erubis(
              :"network/_interface_chooser.html",
              {
                :layout => false,
                :locals => {
                  :select_name    => "input_iface",
                  :all_interfaces => all_interfaces
                }
              }
            )
          %>
        </td>
        <td>
          <%=
            erubis(
              :"network/_interface_chooser.html",
              {
                :layout => false,
                :locals => {
                  :select_name    => "output_iface",
                  :all_interfaces => all_interfaces
                }
              }
            )
          %>
        </td>
        <td>
          <input type="text" class="rwtext" name="source_addr"/>
        </td>
        <td>
          <input type="text" class="rwtext" name="source_ports" size="11" title="Use colon for port interval, e.g. `2100:2200'"/>
        </td>
        <td>
          <input type="text" class="rwtext" name="dest_addr"/>
        </td>
        <td>
          <input type="text" class="rwtext" name="dest_ports" size="11" title="Use colon for port interval, e.g. `2100:2200'"/>
        </td>
      </tr>
    </tbody>
  </table>
  <table style="display:inline;">
    <thead>
      <tr>
        <th>
          Connection State
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          <select multiple name="state[]"
              title="Hold CTRL key to select multiple options">
            <option value="NEW">NEW</option>
            <option value="ESTABLISHED">ESTABLISHED</option>
            <option value="RELATED">RELATED</option>
            <option value="INVALID">INVALID</option>
            <option value="UNTRACKED">UNTRACKED</option>
          </select>
        </td>
      </tr>
    </tbody>
  </table>
  <table style="display:inline;">
    <thead>
      <tr>
        <th>
          Source MAC address
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          <input type="text" class="rwtext" name="mac_source"/>
        </td>
      </tr>
    </tbody>
  </table>
</form>
