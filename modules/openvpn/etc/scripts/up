#!/usr/bin/env ruby

# Restore IP addresses on an OpenVPN TAP device
#
# ENVIRONMENT: (from openvpn --setenv)
#
# RUBYLIB 
#   prepend to the standard Ruby $LOAD_PATH 
#
# NETWORK_INTERFACES_DATFILE
#   YAML (was Marshal) dump of the saved interfaces state
#
# STATIC_ROUTES_DATFILE
#   saved output of "ip -[6|4] route show proto static"
#
#
# COMMAND LINE ARGUMENTS:
#
# ARGV[0] 
#   interface name (automatically appended by openvpn --up)
#
#
# EXAMPLE:
#   
# RUBYLIB=/home/onboard/onboard/lib NETWORK_INTERFACES_DATFILE=/home/onboard/onboard/etc/config/network/interfaces.yml ./up ovpn_tap0

# require 'pp' # DEBUG

require 'onboard/network/interface'
require 'onboard/network/routing'

ifname = ARGV[0]

all_interfaces = OnBoard::Network::Interface.getAll

if File.exists? ENV['NETWORK_INTERFACES_DATFILE']
  all_interfaces_saved = 
      YAML.load File.read ENV['NETWORK_INTERFACES_DATFILE']
else
  all_interfaces_saved = []
end

# Arrays of one element (for compatibility)
netifs = all_interfaces.select{|x| x.name == ifname}
netifs_saved = all_interfaces_saved.select{|x| x.name == ifname}

OnBoard::Network::Interface.restore(
  :saved_interfaces => netifs_saved,
  :current_interfaces => netifs 
)

OnBoard::Network::Routing::Route.restore_static(
  :match => lambda { |line| line =~ /dev\s+#{ifname}/ },  # Linux iproute2 syntax 
  :file => ENV['STATIC_ROUTES_DATFILE']
)

