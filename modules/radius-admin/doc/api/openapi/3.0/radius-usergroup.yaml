openapi: "3.0.0"
info:
  version: 1.0
  title: Margay's FreeRADIUS user/group management API
  description: A ReSTful API to manage users and groups on a FreeRADIUS server, in a Margay system.
    User information is stored in a MySQL database.
  # termsOfService: http://swagger.io/terms/
  contact:
    name: Vemar S.A.S. Dev Team
    email: dev@vemarsas.it
    url: https://github.com/vemarsas/onboard/modules/radius-admin
  license:
    name: GPL 2.0
    url: https://www.gnu.org/licenses/gpl-2.0.html
servers:
  - url: http://localhost:4567/api/v1
paths:
  /services/radius/users:
    get:
      tags:
        - Users
      description: |
        Returns a paginated list of all RADIUS users. A specific page or page size can
        be requested via optional parameters e.g.<br/>
        `GET /api/v1/services/radius/users?page=2&per_page=7`.
      operationId: List Users
      parameters:
        - name: page
          in: query
          description: page within pagination
          required: false
          defalut: 1
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          description: maximum number of results to return per page
          required: false
          schema:
            type: integer
            example: 5
            default: 10
      responses:
        '200':
          description: Paginated list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsers'
              examples:
                users:
                  value:
                    {
                      "total_items": 1,
                      "page": 1,
                      "per_page": 10,
                      "users": [
                        {
                          "name": "u1",
                          "check": [
                            {
                              "Id": 1,
                              "User-Name": "u1",
                              "Attribute": "User-Name",
                              "Operator": ":=",
                              "Value": "u1"
                            },
                            {
                              "Id": 16,
                              "User-Name": "u1",
                              "Attribute": "SSHA1-Password",
                              "Operator": ":=",
                              "Value": "Yg+Zkt25hotWV4vLYXcEjGZv153BmsHJMilz0+XT15W5J4S78ieoZQ=="
                            },
                            {
                              "Id": 18,
                              "User-Name": "u1",
                              "Attribute": "Login-Time",
                              "Operator": ":=",
                              "Value": "Wk2305-0855,Sa,Su2305-1655"
                            }
                          ],
                          "reply": [
                            {
                              "Id": 6,
                              "User-Name": "u1",
                              "Attribute": "Reply-Message",
                              "Operator": ":=",
                              "Value": "my reply msg"
                            },
                            {
                              "Id": 7,
                              "User-Name": "u1",
                              "Attribute": "Session-Timeout",
                              "Operator": ":=",
                              "Value": "7200"
                            },
                            {
                              "Id": 8,
                              "User-Name": "u1",
                              "Attribute": "Idle-Timeout",
                              "Operator": ":=",
                              "Value": "1800"
                            },
                            {
                              "Id": 9,
                              "User-Name": "u1",
                              "Attribute": "WISPr-Bandwidth-Max-Down",
                              "Operator": ":=",
                              "Value": "800000"
                            },
                            {
                              "Id": 10,
                              "User-Name": "u1",
                              "Attribute": "WISPr-Bandwidth-Max-Up",
                              "Operator": ":=",
                              "Value": "400000"
                            },
                            {
                              "Id": 110,
                              "User-Name": "u1",
                              "Attribute": "Fall-Through",
                              "Operator": "=",
                              "Value": "yes"
                            }
                          ],
                          "groups": [

                          ],
                          "personal": null,
                          "accepted_terms": null
                        }
                      ]
                    }
        # default:
        #   description: unexpected error
        #    content:
        #      application/json:
        #        schema:
        #          $ref: '#/components/schemas/Error'
    post:
      tags:
        - Endpoints
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    get:
      tags:
      - Endpoints
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Endpoints
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    PaginatedUsers:
      type: object
      required:
        - total_items
        - page
        - per_page
        - users
      properties:
        total_items:
          description: total number of users
          readOnly: true
          type: integer
        page:
          description: page within pagination
          readOnly: true
          type: integer
        per_page:
          description: number of users per page
          readOnly: true
          type: integer
        users:
          description: array of User objects
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/User'

    User:
      required:
        - id
      properties:
        id:
          type: integer
          format: int64

    NewPet:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
